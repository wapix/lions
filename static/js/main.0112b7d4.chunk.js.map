{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","image","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","WHITELIST","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","alt","src","style","padding","borderRadius","maxWidth","margin","color","fontSize","fontWeight","letterSpacing","textShadow","textAlign","Number","target","href","className","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","$isWhite","whitlistData","map","item","toLowerCase","wallet","isWhitList","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0112b7d4.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport whitlistData from './whitelist.json';\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px 25px;\r\n  font-size: 25px;\r\n  font-family: 'Tungsten Bold', 'League Gothic', sans-serif;\r\n  font-weight: 500;\r\n  background: #38827f;\r\n  outline: none !important;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  display: inline-block;\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  font-family: 'Tungsten Bold', 'League Gothic', sans-serif;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  width: 50px;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 100%;\r\n  border: 1px solid #38827f;\r\n  background: transparent;\r\n  color: #fff;\r\n  transition: .3s;\r\n  :hover{\r\n    background: #38827f;\r\n    transition: .3s;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  margin-top: 20px;\r\n  width: 80px;\r\n  @media (min-width: 767px) {\r\n    width: 100px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  // box-shadow: 0px 0px 20px 0px rgb(56 182 255 / 23%);\r\n  // border: 1px solid #38827f;\r\n  // border-radius: 10px;\r\n  width: 100%;\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n    WHITELIST: false,\r\n  });\r\n\r\n  const isWhitList = () => {\r\n    let $isWhite = false\r\n    whitlistData.map((item) => {\r\n      if (blockchain.account.toLowerCase() == item.wallet.toLowerCase()){\r\n        $isWhite = true\r\n      }\r\n    });\r\n  \r\n    return $isWhite;\r\n  };\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * (mintAmount/3));\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(mintAmount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 10) {\r\n      newMintAmount = 10;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen>\r\n      <s.Container\r\n        flex={1}\r\n        ai={\"center\"}\r\n      >\r\n          <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\r\n        <ResponsiveWrapper flex={1}>\r\n          <ResponsiveWrapper flex={1}\r\n          style={{\r\n            // backgroundColor: \"var(--accent)\",\r\n            padding: 24,\r\n            borderRadius: 24,\r\n            // boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\r\n            maxWidth: \"1140px\",\r\n            margin: \"auto\",\r\n          }}\r\n          test>\r\n            <s.Container\r\n              flex={1}\r\n              jc={\"center\"}\r\n              ai={\"center\"}\r\n            >\r\n              <s.TextTitle\r\n                style={{\r\n                  color: \"#38827f\",\r\n                  fontSize: \"45px\",\r\n                  fontWeight: \"300\",\r\n                  letterSpacing: \"2px\",\r\n                  textShadow: \"0px 0px 5px rgb(56 182 255 / 78%)\",\r\n                  textAlign: \"center\"\r\n                }}\r\n              >\r\n                MINT A {CONFIG.NFT_NAME}.\r\n              </s.TextTitle>\r\n              {blockchain.account === \"\" ||\r\n                  blockchain.smartContract === null ? (\r\n                  <s.TextTitle\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      fontWeight: \"bold\",\r\n                      color: \"var(--accent-text)\",\r\n                    }}\r\n                  >\r\n                    1,000 Leones Legendarios Únicos.\r\n                  </s.TextTitle>\r\n                  ) : (\r\n                    <s.TextTitle\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      fontSize: 50,\r\n                      fontWeight: \"bold\",\r\n                      color: \"var(--accent-text)\",\r\n                    }}\r\n                  >\r\n                    {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n                  </s.TextTitle>\r\n                  )}\r\n              <s.SpacerSmall />\r\n              {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n                <>\r\n                  <s.TextTitle\r\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                  >\r\n                    The sale has ended.\r\n                  </s.TextTitle>\r\n                  <s.TextDescription\r\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                  >\r\n                    You can still find {CONFIG.NFT_NAME} on\r\n                  </s.TextDescription>\r\n                  <s.SpacerSmall />\r\n                  <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                    {CONFIG.MARKETPLACE}\r\n                  </StyledLink>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <s.TextTitle\r\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                  >\r\n                    {/* 1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\r\n                  {CONFIG.NETWORK.SYMBOL}. */}\r\n                  1 NFT = {CONFIG.DISPLAY_COST}{\" \"}\r\n                  {CONFIG.NETWORK.SYMBOL}.\r\n                  </s.TextTitle>\r\n                  <s.SpacerSmall />\r\n                  {blockchain.account === \"\" ||\r\n                  blockchain.smartContract === null ? (\r\n                    <s.Container ai={\"center\"} jc={\"center\"}>\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        Connect your Metamask\r\n                      </s.TextDescription>\r\n                      <s.SpacerSmall />\r\n                      <StyledButton className=\"btn-43\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          dispatch(connect());\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        CONNECT\r\n                      </StyledButton>\r\n                      {blockchain.errorMsg !== \"\" ? (\r\n                        <>\r\n                          <s.SpacerSmall />\r\n                          <s.TextDescription\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                              color: \"var(--accent-text)\",\r\n                            }}\r\n                          >\r\n                            {blockchain.errorMsg}\r\n                          </s.TextDescription>\r\n                        </>\r\n                      ) : null}\r\n                    </s.Container>\r\n                  ) : (\r\n                    <>\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        {feedback}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                        <StyledRoundButton\r\n                          style={{ lineHeight: 0.4 }}\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            decrementMintAmount();\r\n                          }}\r\n                        >\r\n                          -\r\n                        </StyledRoundButton>\r\n                        <s.SpacerMedium />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                            fontSize: \"25px\",\r\n                          }}\r\n                        >\r\n                          {mintAmount}\r\n                        </s.TextDescription>\r\n                        <s.SpacerMedium />\r\n                        <StyledRoundButton\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            incrementMintAmount();\r\n                          }}\r\n                        >\r\n                          +\r\n                        </StyledRoundButton>\r\n                      </s.Container>\r\n                      <s.SpacerSmall />\r\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      {(isWhitList() || CONFIG.WHITELIST == false ? (\r\n                          <StyledButton className=\"btn-43\"\r\n                            disabled={claimingNft ? 1 : 0}\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                                claimNFTs();\r\n                                getData();\r\n                              }}\r\n                              >\r\n                            {claimingNft ? \"BUSY\" : \"Mint\"}\r\n                          </StyledButton>\r\n                        ) : (\r\n                          <s.TextDescription\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                              color: \"var(--accent-text)\",\r\n                              fontSize: \"25px\",\r\n                            }}\r\n                          >\r\n                            You are not whitelisted\r\n                          </s.TextDescription>)\r\n                        )}\r\n                      </s.Container>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              <s.SpacerMedium />\r\n            </s.Container>\r\n            <s.SpacerLarge />\r\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n              <StyledImg\r\n                alt={\"example\"}\r\n                src={\"/config/images/main.png\"}\r\n              />\r\n            </s.Container>\r\n          </ResponsiveWrapper>\r\n          <s.SpacerMedium />\r\n        </ResponsiveWrapper>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}